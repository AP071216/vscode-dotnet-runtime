parameters:
  pool: ''

jobs:
- job: ${{ parameters.pool.os }}_Build
  pool: ${{ parameters.pool }}
  displayName: '🔨 Build and Test'
  templateContext:
    outputs:
    - output: pipelineArtifact
      displayName: '🌐 Publish Logs'
      condition: always()
      targetPath: '$(Build.SourcesDirectory)/vscode-dotnet-runtime-extension/dist/test/functional/logs'
      artifactName: 'logs'
  steps:
  - script: build.cmd
    displayName: 💻 Build Windows
    condition: eq(variables['Agent.OS'], 'Windows_NT')
  - script: test.cmd
    displayName: 🔍 Test Windows
    condition: eq(variables['Agent.OS'], 'Windows_NT')
  - bash: |
      /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
      echo ">>> Started xvfb"
    displayName: 🎮 Start xvfb
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))
  - script: ./build.sh
    displayName: 🐧 Build Mac and Linux
    condition: or(eq(variables['Agent.OS'], 'Darwin'), eq(variables['Agent.OS'], 'Linux'))
  - script: ./test.sh
    displayName: 🔎 Test Mac and Linux
    env: {DISPLAY: ':99.0'}
    condition: or(eq(variables['Agent.OS'], 'Darwin'), eq(variables['Agent.OS'], 'Linux'))
